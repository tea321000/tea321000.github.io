"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RecoilView = void 0;
const app = require("..");
const React = require("react");
const ui = require("ui");
exports.RecoilView = ui.createView(({ vm }) => (React.createElement(ui.material.FormGroup, null,
    React.createElement(ui.material.Typography, { variant: "h6" }, app.language.researchRecoil),
    React.createElement(ui.material.FormControlLabel, { label: app.language.researchRecoilEnable, control: React.createElement(ui.material.Switch, { onChange: x => vm.enable.change(x.target.checked), checked: vm.enable.value }) }),
    React.createElement(ui.material.Box, { sx: styles.sliderLabel },
        React.createElement(ui.material.Typography, null, app.language.researchRecoilPercentage),
        React.createElement(ui.material.Box, { sx: styles.sliderValue }, vm.percentage.value)),
    React.createElement(ui.material.Slider, { onChange: (_, x) => vm.percentage.change(Number(x)), value: vm.percentage.value, min: 0, max: 1, step: 0.01 }))));
const styles = {
    sliderLabel: {
        position: 'relative'
    },
    sliderValue: {
        position: 'absolute',
        right: 0,
        top: 0
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVjb2lsVmlldy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy91aS9zZXR0aW5ncy9yZXNlYXJjaC92aWV3cy9SZWNvaWxWaWV3LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwwQkFBMEI7QUFDMUIsK0JBQStCO0FBQy9CLHlCQUF5QjtBQUVaLFFBQUEsVUFBVSxHQUFHLEVBQUUsQ0FBQyxVQUFVLENBQTRCLENBQUMsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFFLENBQUMsQ0FDM0Usb0JBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxTQUFTO0lBQ3BCLG9CQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsVUFBVSxJQUFDLE9BQU8sRUFBQyxJQUFJLElBQ2pDLEdBQUcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUNMO0lBQ3pCLG9CQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLElBQzNCLEtBQUssRUFBRSxHQUFHLENBQUMsUUFBUSxDQUFDLG9CQUFvQixFQUN4QyxPQUFPLEVBQUUsb0JBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxNQUFNLElBQzFCLFFBQVEsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEVBQ2pELE9BQU8sRUFBRSxFQUFFLENBQUMsTUFBTSxDQUFDLEtBQUssR0FBSSxHQUFJO0lBQ3BDLG9CQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsR0FBRyxJQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsV0FBVztRQUNyQyxvQkFBQyxFQUFFLENBQUMsUUFBUSxDQUFDLFVBQVUsUUFDcEIsR0FBRyxDQUFDLFFBQVEsQ0FBQyx3QkFBd0IsQ0FDZjtRQUN6QixvQkFBQyxFQUFFLENBQUMsUUFBUSxDQUFDLEdBQUcsSUFBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLFdBQVcsSUFDcEMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQ0osQ0FDRjtJQUNsQixvQkFBQyxFQUFFLENBQUMsUUFBUSxDQUFDLE1BQU0sSUFDakIsUUFBUSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQ25ELEtBQUssRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLEtBQUssRUFDMUIsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLEdBQUksQ0FDVixDQUN6QixDQUFDLENBQUM7QUFFSCxNQUFNLE1BQU0sR0FBRztJQUNiLFdBQVcsRUFBRTtRQUNYLFFBQVEsRUFBRSxVQUFVO0tBQ3JCO0lBQ0QsV0FBVyxFQUFFO1FBQ1gsUUFBUSxFQUFFLFVBQVU7UUFDcEIsS0FBSyxFQUFFLENBQUM7UUFDUixHQUFHLEVBQUUsQ0FBQztLQUNQO0NBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGFwcCBmcm9tICcuLic7XHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0ICogYXMgdWkgZnJvbSAndWknO1xyXG5cclxuZXhwb3J0IGNvbnN0IFJlY29pbFZpZXcgPSB1aS5jcmVhdGVWaWV3PHt2bTogYXBwLlJlY29pbFZpZXdNb2RlbH0+KCh7dm19KSA9PiAoXHJcbiAgPHVpLm1hdGVyaWFsLkZvcm1Hcm91cD5cclxuICAgIDx1aS5tYXRlcmlhbC5UeXBvZ3JhcGh5IHZhcmlhbnQ9XCJoNlwiPlxyXG4gICAgICB7YXBwLmxhbmd1YWdlLnJlc2VhcmNoUmVjb2lsfVxyXG4gICAgPC91aS5tYXRlcmlhbC5UeXBvZ3JhcGh5PlxyXG4gICAgPHVpLm1hdGVyaWFsLkZvcm1Db250cm9sTGFiZWxcclxuICAgICAgbGFiZWw9e2FwcC5sYW5ndWFnZS5yZXNlYXJjaFJlY29pbEVuYWJsZX1cclxuICAgICAgY29udHJvbD17PHVpLm1hdGVyaWFsLlN3aXRjaFxyXG4gICAgICAgIG9uQ2hhbmdlPXt4ID0+IHZtLmVuYWJsZS5jaGFuZ2UoeC50YXJnZXQuY2hlY2tlZCl9XHJcbiAgICAgICAgY2hlY2tlZD17dm0uZW5hYmxlLnZhbHVlfSAvPn0gLz5cclxuICAgIDx1aS5tYXRlcmlhbC5Cb3ggc3g9e3N0eWxlcy5zbGlkZXJMYWJlbH0+XHJcbiAgICAgIDx1aS5tYXRlcmlhbC5UeXBvZ3JhcGh5PlxyXG4gICAgICAgIHthcHAubGFuZ3VhZ2UucmVzZWFyY2hSZWNvaWxQZXJjZW50YWdlfVxyXG4gICAgICA8L3VpLm1hdGVyaWFsLlR5cG9ncmFwaHk+XHJcbiAgICAgIDx1aS5tYXRlcmlhbC5Cb3ggc3g9e3N0eWxlcy5zbGlkZXJWYWx1ZX0+XHJcbiAgICAgICAge3ZtLnBlcmNlbnRhZ2UudmFsdWV9XHJcbiAgICAgIDwvdWkubWF0ZXJpYWwuQm94PlxyXG4gICAgPC91aS5tYXRlcmlhbC5Cb3g+XHJcbiAgICA8dWkubWF0ZXJpYWwuU2xpZGVyXHJcbiAgICAgIG9uQ2hhbmdlPXsoXywgeCkgPT4gdm0ucGVyY2VudGFnZS5jaGFuZ2UoTnVtYmVyKHgpKX1cclxuICAgICAgdmFsdWU9e3ZtLnBlcmNlbnRhZ2UudmFsdWV9XHJcbiAgICAgIG1pbj17MH0gbWF4PXsxfSBzdGVwPXswLjAxfSAvPlxyXG4gIDwvdWkubWF0ZXJpYWwuRm9ybUdyb3VwPlxyXG4pKTtcclxuXHJcbmNvbnN0IHN0eWxlcyA9IHtcclxuICBzbGlkZXJMYWJlbDoge1xyXG4gICAgcG9zaXRpb246ICdyZWxhdGl2ZSdcclxuICB9LFxyXG4gIHNsaWRlclZhbHVlOiB7XHJcbiAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcclxuICAgIHJpZ2h0OiAwLFxyXG4gICAgdG9wOiAwXHJcbiAgfVxyXG59O1xyXG4iXX0=