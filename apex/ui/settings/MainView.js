"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MainView = void 0;
const app = require(".");
const React = require("react");
const ui = require("ui");
const FilterList_1 = require("@mui/icons-material/FilterList");
const Science_1 = require("@mui/icons-material/Science");
const Settings_1 = require("@mui/icons-material/Settings");
exports.MainView = ui.createView(({ vm }) => (React.createElement(ui.material.Box, { sx: styles.container },
    React.createElement(SwitchView, { vm: vm }),
    React.createElement(ui.material.Paper, { sx: styles.navigation, square: true },
        React.createElement(ui.material.Divider, null),
        React.createElement(ui.material.BottomNavigation, { showLabels: true, value: vm.currentView },
            React.createElement(ui.material.BottomNavigationAction, { sx: styles.navigationAction, onClick: () => vm.changeView(0), icon: React.createElement(Settings_1.default, null), label: app.language.general }),
            React.createElement(ui.material.BottomNavigationAction, { sx: styles.navigationAction, onClick: () => vm.changeView(1), icon: React.createElement(FilterList_1.default, null), label: app.language.items }),
            React.createElement(ui.material.BottomNavigationAction, { sx: styles.navigationAction, onClick: () => vm.changeView(2), icon: React.createElement(Science_1.default, null), label: app.language.research }))))));
const SwitchView = ui.createView(({ vm }) => {
    switch (vm.currentView) {
        case 1: return React.createElement(app.items.MainView, { vm: vm.items });
        case 2: return React.createElement(app.research.MainView, { vm: vm.research });
        default: return React.createElement(app.general.MainView, { vm: vm.general });
    }
});
const styles = {
    container: {
        margin: '0 auto',
        maxWidth: '384px',
        padding: '16px',
        paddingBottom: '56px'
    },
    navigation: {
        position: 'fixed',
        bottom: 0,
        left: 0,
        right: 0
    },
    navigationAction: {
        maxWidth: '128px'
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFpblZpZXcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdWkvc2V0dGluZ3MvTWFpblZpZXcudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHlCQUF5QjtBQUN6QiwrQkFBK0I7QUFDL0IseUJBQXlCO0FBQ3pCLCtEQUF3RDtBQUN4RCx5REFBa0Q7QUFDbEQsMkRBQW9EO0FBRXZDLFFBQUEsUUFBUSxHQUFHLEVBQUUsQ0FBQyxVQUFVLENBQTBCLENBQUMsRUFBQyxFQUFFLEVBQUMsRUFBRSxFQUFFLENBQUMsQ0FDdkUsb0JBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxHQUFHLElBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxTQUFTO0lBQ25DLG9CQUFDLFVBQVUsSUFBQyxFQUFFLEVBQUUsRUFBRSxHQUFJO0lBQ3RCLG9CQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsS0FBSyxJQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsVUFBVSxFQUFFLE1BQU0sRUFBRSxJQUFJO1FBQ3BELG9CQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsT0FBTyxPQUFHO1FBQ3ZCLG9CQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLElBQUMsVUFBVSxRQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsV0FBVztZQUM1RCxvQkFBQyxFQUFFLENBQUMsUUFBUSxDQUFDLHNCQUFzQixJQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsZ0JBQWdCLEVBQzdELE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUMvQixJQUFJLEVBQUUsb0JBQUMsa0JBQVEsT0FBRyxFQUNsQixLQUFLLEVBQUUsR0FBRyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEdBQUk7WUFDakMsb0JBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxzQkFBc0IsSUFBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLGdCQUFnQixFQUM3RCxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFDL0IsSUFBSSxFQUFFLG9CQUFDLG9CQUFVLE9BQUcsRUFDcEIsS0FBSyxFQUFFLEdBQUcsQ0FBQyxRQUFRLENBQUMsS0FBSyxHQUFJO1lBQy9CLG9CQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsc0JBQXNCLElBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxnQkFBZ0IsRUFDN0QsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQy9CLElBQUksRUFBRSxvQkFBQyxpQkFBTyxPQUFHLEVBQ2pCLEtBQUssRUFBRSxHQUFHLENBQUMsUUFBUSxDQUFDLFFBQVEsR0FBSSxDQUNMLENBQ2IsQ0FDSixDQUNuQixDQUFDLENBQUM7QUFFSCxNQUFNLFVBQVUsR0FBRyxFQUFFLENBQUMsVUFBVSxDQUEwQixDQUFDLEVBQUMsRUFBRSxFQUFDLEVBQUUsRUFBRTtJQUNqRSxRQUFRLEVBQUUsQ0FBQyxXQUFXLEVBQUU7UUFDdEIsS0FBSyxDQUFDLENBQUMsQ0FBQyxPQUFPLG9CQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsUUFBUSxJQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsS0FBSyxHQUFJLENBQUM7UUFDcEQsS0FBSyxDQUFDLENBQUMsQ0FBQyxPQUFPLG9CQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsUUFBUSxJQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsUUFBUSxHQUFJLENBQUM7UUFDMUQsT0FBTyxDQUFDLENBQUMsT0FBTyxvQkFBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFFBQVEsSUFBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLE9BQU8sR0FBSSxDQUFDO0tBQzFEO0FBQ0gsQ0FBQyxDQUFDLENBQUM7QUFFSCxNQUFNLE1BQU0sR0FBRztJQUNiLFNBQVMsRUFBRTtRQUNULE1BQU0sRUFBRSxRQUFRO1FBQ2hCLFFBQVEsRUFBRSxPQUFPO1FBQ2pCLE9BQU8sRUFBRSxNQUFNO1FBQ2YsYUFBYSxFQUFFLE1BQU07S0FDdEI7SUFDRCxVQUFVLEVBQUU7UUFDVixRQUFRLEVBQUUsT0FBTztRQUNqQixNQUFNLEVBQUUsQ0FBQztRQUNULElBQUksRUFBRSxDQUFDO1FBQ1AsS0FBSyxFQUFFLENBQUM7S0FDVDtJQUNELGdCQUFnQixFQUFFO1FBQ2hCLFFBQVEsRUFBRSxPQUFPO0tBQ2xCO0NBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGFwcCBmcm9tICcuJztcclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgKiBhcyB1aSBmcm9tICd1aSc7XHJcbmltcG9ydCBGaWx0ZXJMaXN0IGZyb20gJ0BtdWkvaWNvbnMtbWF0ZXJpYWwvRmlsdGVyTGlzdCc7XHJcbmltcG9ydCBTY2llbmNlIGZyb20gJ0BtdWkvaWNvbnMtbWF0ZXJpYWwvU2NpZW5jZSc7XHJcbmltcG9ydCBTZXR0aW5ncyBmcm9tICdAbXVpL2ljb25zLW1hdGVyaWFsL1NldHRpbmdzJztcclxuXHJcbmV4cG9ydCBjb25zdCBNYWluVmlldyA9IHVpLmNyZWF0ZVZpZXc8e3ZtOiBhcHAuTWFpblZpZXdNb2RlbH0+KCh7dm19KSA9PiAoXHJcbiAgPHVpLm1hdGVyaWFsLkJveCBzeD17c3R5bGVzLmNvbnRhaW5lcn0+XHJcbiAgICA8U3dpdGNoVmlldyB2bT17dm19IC8+XHJcbiAgICA8dWkubWF0ZXJpYWwuUGFwZXIgc3g9e3N0eWxlcy5uYXZpZ2F0aW9ufSBzcXVhcmU9e3RydWV9PlxyXG4gICAgICA8dWkubWF0ZXJpYWwuRGl2aWRlciAvPlxyXG4gICAgICA8dWkubWF0ZXJpYWwuQm90dG9tTmF2aWdhdGlvbiBzaG93TGFiZWxzIHZhbHVlPXt2bS5jdXJyZW50Vmlld30+XHJcbiAgICAgICAgPHVpLm1hdGVyaWFsLkJvdHRvbU5hdmlnYXRpb25BY3Rpb24gc3g9e3N0eWxlcy5uYXZpZ2F0aW9uQWN0aW9ufVxyXG4gICAgICAgICAgb25DbGljaz17KCkgPT4gdm0uY2hhbmdlVmlldygwKX1cclxuICAgICAgICAgIGljb249ezxTZXR0aW5ncyAvPn1cclxuICAgICAgICAgIGxhYmVsPXthcHAubGFuZ3VhZ2UuZ2VuZXJhbH0gLz5cclxuICAgICAgICA8dWkubWF0ZXJpYWwuQm90dG9tTmF2aWdhdGlvbkFjdGlvbiBzeD17c3R5bGVzLm5hdmlnYXRpb25BY3Rpb259XHJcbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB2bS5jaGFuZ2VWaWV3KDEpfVxyXG4gICAgICAgICAgaWNvbj17PEZpbHRlckxpc3QgLz59XHJcbiAgICAgICAgICBsYWJlbD17YXBwLmxhbmd1YWdlLml0ZW1zfSAvPlxyXG4gICAgICAgIDx1aS5tYXRlcmlhbC5Cb3R0b21OYXZpZ2F0aW9uQWN0aW9uIHN4PXtzdHlsZXMubmF2aWdhdGlvbkFjdGlvbn1cclxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHZtLmNoYW5nZVZpZXcoMil9XHJcbiAgICAgICAgICBpY29uPXs8U2NpZW5jZSAvPn1cclxuICAgICAgICAgIGxhYmVsPXthcHAubGFuZ3VhZ2UucmVzZWFyY2h9IC8+XHJcbiAgICAgIDwvdWkubWF0ZXJpYWwuQm90dG9tTmF2aWdhdGlvbj5cclxuICAgIDwvdWkubWF0ZXJpYWwuUGFwZXI+XHJcbiAgPC91aS5tYXRlcmlhbC5Cb3g+XHJcbikpO1xyXG5cclxuY29uc3QgU3dpdGNoVmlldyA9IHVpLmNyZWF0ZVZpZXc8e3ZtOiBhcHAuTWFpblZpZXdNb2RlbH0+KCh7dm19KSA9PiB7XHJcbiAgc3dpdGNoICh2bS5jdXJyZW50Vmlldykge1xyXG4gICAgY2FzZSAxOiByZXR1cm4gPGFwcC5pdGVtcy5NYWluVmlldyB2bT17dm0uaXRlbXN9IC8+O1xyXG4gICAgY2FzZSAyOiByZXR1cm4gPGFwcC5yZXNlYXJjaC5NYWluVmlldyB2bT17dm0ucmVzZWFyY2h9IC8+O1xyXG4gICAgZGVmYXVsdDogcmV0dXJuIDxhcHAuZ2VuZXJhbC5NYWluVmlldyB2bT17dm0uZ2VuZXJhbH0gLz47XHJcbiAgfVxyXG59KTtcclxuXHJcbmNvbnN0IHN0eWxlcyA9IHtcclxuICBjb250YWluZXI6IHtcclxuICAgIG1hcmdpbjogJzAgYXV0bycsXHJcbiAgICBtYXhXaWR0aDogJzM4NHB4JyxcclxuICAgIHBhZGRpbmc6ICcxNnB4JyxcclxuICAgIHBhZGRpbmdCb3R0b206ICc1NnB4J1xyXG4gIH0sXHJcbiAgbmF2aWdhdGlvbjoge1xyXG4gICAgcG9zaXRpb246ICdmaXhlZCcsXHJcbiAgICBib3R0b206IDAsXHJcbiAgICBsZWZ0OiAwLFxyXG4gICAgcmlnaHQ6IDBcclxuICB9LFxyXG4gIG5hdmlnYXRpb25BY3Rpb246IHtcclxuICAgIG1heFdpZHRoOiAnMTI4cHgnXHJcbiAgfVxyXG59O1xyXG4iXX0=