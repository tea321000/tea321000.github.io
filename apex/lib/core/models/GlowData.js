"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GlowData = void 0;
const app = require("..");
class GlowData {
    constructor(inside, outline, outlineRadius, customState, isDrawn, isPostProcess) {
        this.inside = inside;
        this.outline = outline;
        this.outlineRadius = outlineRadius;
        this.customState = customState;
        this.isDrawn = isDrawn;
        this.isPostProcess = isPostProcess;
    }
    static fromUInt32(value) {
        const inside = value & 0xFF;
        const outline = value >> 8 & 0xFF;
        const outlineRadius = value >> 16 & 0xFF;
        const customState = value >> 24 & 0x3F;
        const isDrawn = Boolean(value >> 24 & 0x40);
        const isPostProcess = Boolean(value >> 24 & 0x80);
        return new GlowData(inside, outline, outlineRadius, customState, isDrawn, isPostProcess);
    }
    isSame(otherGlow) {
        return this.inside === otherGlow.inside
            && this.outline === otherGlow.outline
            && this.outlineRadius === otherGlow.outlineRadius
            && this.customState === otherGlow.customState
            && this.isDrawn === otherGlow.isDrawn
            && this.isPostProcess === otherGlow.isPostProcess;
    }
    toUInt32() {
        let result = 0;
        result |= Math.min(0xFF, this.inside);
        result |= Math.min(0xFF, this.outline) << 8;
        result |= Math.min(0xFF, this.outlineRadius) << 16;
        result |= Math.min(0x3F, this.customState) << 24;
        result |= this.isDrawn ? 0x40 << 24 : 0;
        result |= this.isPostProcess ? 0x80 << 24 : 0;
        return result;
    }
    toString() {
        return app.serialize(this);
    }
}
exports.GlowData = GlowData;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2xvd0RhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL2NvcmUvbW9kZWxzL0dsb3dEYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDBCQUEwQjtBQUUxQixNQUFhLFFBQVE7SUFDbkIsWUFDVyxNQUFjLEVBQ2QsT0FBZSxFQUNmLGFBQXFCLEVBQ3JCLFdBQW1CLEVBQ25CLE9BQWdCLEVBQ2hCLGFBQXNCO1FBTHRCLFdBQU0sR0FBTixNQUFNLENBQVE7UUFDZCxZQUFPLEdBQVAsT0FBTyxDQUFRO1FBQ2Ysa0JBQWEsR0FBYixhQUFhLENBQVE7UUFDckIsZ0JBQVcsR0FBWCxXQUFXLENBQVE7UUFDbkIsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUNoQixrQkFBYSxHQUFiLGFBQWEsQ0FBUztJQUFHLENBQUM7SUFFckMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFhO1FBQzdCLE1BQU0sTUFBTSxHQUFHLEtBQUssR0FBRyxJQUFJLENBQUM7UUFDNUIsTUFBTSxPQUFPLEdBQUcsS0FBSyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUM7UUFDbEMsTUFBTSxhQUFhLEdBQUcsS0FBSyxJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUM7UUFDekMsTUFBTSxXQUFXLEdBQUcsS0FBSyxJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUM7UUFDdkMsTUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLEtBQUssSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDNUMsTUFBTSxhQUFhLEdBQUcsT0FBTyxDQUFDLEtBQUssSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDbEQsT0FBTyxJQUFJLFFBQVEsQ0FBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFFLGFBQWEsQ0FBQyxDQUFDO0lBQzNGLENBQUM7SUFFRCxNQUFNLENBQUMsU0FBbUI7UUFDeEIsT0FBTyxJQUFJLENBQUMsTUFBTSxLQUFLLFNBQVMsQ0FBQyxNQUFNO2VBQ2xDLElBQUksQ0FBQyxPQUFPLEtBQUssU0FBUyxDQUFDLE9BQU87ZUFDbEMsSUFBSSxDQUFDLGFBQWEsS0FBSyxTQUFTLENBQUMsYUFBYTtlQUM5QyxJQUFJLENBQUMsV0FBVyxLQUFLLFNBQVMsQ0FBQyxXQUFXO2VBQzFDLElBQUksQ0FBQyxPQUFPLEtBQUssU0FBUyxDQUFDLE9BQU87ZUFDbEMsSUFBSSxDQUFDLGFBQWEsS0FBSyxTQUFTLENBQUMsYUFBYSxDQUFDO0lBQ3RELENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxNQUFNLEdBQUcsQ0FBQyxDQUFDO1FBQ2YsTUFBTSxJQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN0QyxNQUFNLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1QyxNQUFNLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNuRCxNQUFNLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNqRCxNQUFNLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3hDLE1BQU0sSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDOUMsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztJQUVELFFBQVE7UUFDTixPQUFPLEdBQUcsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDN0IsQ0FBQztDQUNGO0FBMUNELDRCQTBDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGFwcCBmcm9tICcuLic7XHJcblxyXG5leHBvcnQgY2xhc3MgR2xvd0RhdGEge1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcmVhZG9ubHkgaW5zaWRlOiBudW1iZXIsXHJcbiAgICByZWFkb25seSBvdXRsaW5lOiBudW1iZXIsXHJcbiAgICByZWFkb25seSBvdXRsaW5lUmFkaXVzOiBudW1iZXIsXHJcbiAgICByZWFkb25seSBjdXN0b21TdGF0ZTogbnVtYmVyLFxyXG4gICAgcmVhZG9ubHkgaXNEcmF3bjogYm9vbGVhbixcclxuICAgIHJlYWRvbmx5IGlzUG9zdFByb2Nlc3M6IGJvb2xlYW4pIHt9XHJcblxyXG4gIHN0YXRpYyBmcm9tVUludDMyKHZhbHVlOiBudW1iZXIpIHtcclxuICAgIGNvbnN0IGluc2lkZSA9IHZhbHVlICYgMHhGRjtcclxuICAgIGNvbnN0IG91dGxpbmUgPSB2YWx1ZSA+PiA4ICYgMHhGRjtcclxuICAgIGNvbnN0IG91dGxpbmVSYWRpdXMgPSB2YWx1ZSA+PiAxNiAmIDB4RkY7XHJcbiAgICBjb25zdCBjdXN0b21TdGF0ZSA9IHZhbHVlID4+IDI0ICYgMHgzRjtcclxuICAgIGNvbnN0IGlzRHJhd24gPSBCb29sZWFuKHZhbHVlID4+IDI0ICYgMHg0MCk7XHJcbiAgICBjb25zdCBpc1Bvc3RQcm9jZXNzID0gQm9vbGVhbih2YWx1ZSA+PiAyNCAmIDB4ODApO1xyXG4gICAgcmV0dXJuIG5ldyBHbG93RGF0YShpbnNpZGUsIG91dGxpbmUsIG91dGxpbmVSYWRpdXMsIGN1c3RvbVN0YXRlLCBpc0RyYXduLCBpc1Bvc3RQcm9jZXNzKTtcclxuICB9XHJcblxyXG4gIGlzU2FtZShvdGhlckdsb3c6IEdsb3dEYXRhKSB7XHJcbiAgICByZXR1cm4gdGhpcy5pbnNpZGUgPT09IG90aGVyR2xvdy5pbnNpZGVcclxuICAgICAgJiYgdGhpcy5vdXRsaW5lID09PSBvdGhlckdsb3cub3V0bGluZVxyXG4gICAgICAmJiB0aGlzLm91dGxpbmVSYWRpdXMgPT09IG90aGVyR2xvdy5vdXRsaW5lUmFkaXVzXHJcbiAgICAgICYmIHRoaXMuY3VzdG9tU3RhdGUgPT09IG90aGVyR2xvdy5jdXN0b21TdGF0ZVxyXG4gICAgICAmJiB0aGlzLmlzRHJhd24gPT09IG90aGVyR2xvdy5pc0RyYXduXHJcbiAgICAgICYmIHRoaXMuaXNQb3N0UHJvY2VzcyA9PT0gb3RoZXJHbG93LmlzUG9zdFByb2Nlc3M7XHJcbiAgfVxyXG5cclxuICB0b1VJbnQzMigpIHtcclxuICAgIGxldCByZXN1bHQgPSAwO1xyXG4gICAgcmVzdWx0IHw9IE1hdGgubWluKDB4RkYsIHRoaXMuaW5zaWRlKTtcclxuICAgIHJlc3VsdCB8PSBNYXRoLm1pbigweEZGLCB0aGlzLm91dGxpbmUpIDw8IDg7XHJcbiAgICByZXN1bHQgfD0gTWF0aC5taW4oMHhGRiwgdGhpcy5vdXRsaW5lUmFkaXVzKSA8PCAxNjtcclxuICAgIHJlc3VsdCB8PSBNYXRoLm1pbigweDNGLCB0aGlzLmN1c3RvbVN0YXRlKSA8PCAyNDtcclxuICAgIHJlc3VsdCB8PSB0aGlzLmlzRHJhd24gPyAweDQwIDw8IDI0IDogMDtcclxuICAgIHJlc3VsdCB8PSB0aGlzLmlzUG9zdFByb2Nlc3MgPyAweDgwIDw8IDI0IDogMDtcclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG5cclxuICB0b1N0cmluZygpIHtcclxuICAgIHJldHVybiBhcHAuc2VyaWFsaXplKHRoaXMpO1xyXG4gIH1cclxufVxyXG4iXX0=