"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Glow = void 0;
const app = require("..");
class Glow extends app.api.Adapter {
    constructor(offset, interval = 0) {
        super(new app.api.EntityMember(offset, interval, 4));
    }
    get value() {
        const value = this.source.buffer.getUint32(0, true);
        return app.GlowData.fromUInt32(value);
    }
    set value(value) {
        if (this.value.isSame(value))
            return;
        this.source.buffer.setUint32(0, value.toUInt32(), true);
        this.source.send = true;
    }
    toString() {
        return app.serialize(this.value);
    }
}
exports.Glow = Glow;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2xvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvY29yZS90eXBlcy9HbG93LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDBCQUEwQjtBQUUxQixNQUFhLElBQUssU0FBUSxHQUFHLENBQUMsR0FBRyxDQUFDLE9BQTZCO0lBQzdELFlBQVksTUFBYyxFQUFFLFFBQVEsR0FBRyxDQUFDO1FBQ3RDLEtBQUssQ0FBQyxJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN2RCxDQUFDO0lBRUQsSUFBSSxLQUFLO1FBQ1AsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNwRCxPQUFPLEdBQUcsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxJQUFJLEtBQUssQ0FBQyxLQUFtQjtRQUMzQixJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztZQUFFLE9BQU87UUFDckMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsUUFBUSxFQUFFLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDeEQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQzFCLENBQUM7SUFFRCxRQUFRO1FBQ04sT0FBTyxHQUFHLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNuQyxDQUFDO0NBQ0Y7QUFuQkQsb0JBbUJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgYXBwIGZyb20gJy4uJztcclxuXHJcbmV4cG9ydCBjbGFzcyBHbG93IGV4dGVuZHMgYXBwLmFwaS5BZGFwdGVyPGFwcC5hcGkuRW50aXR5TWVtYmVyPiB7XHJcbiAgY29uc3RydWN0b3Iob2Zmc2V0OiBudW1iZXIsIGludGVydmFsID0gMCkge1xyXG4gICAgc3VwZXIobmV3IGFwcC5hcGkuRW50aXR5TWVtYmVyKG9mZnNldCwgaW50ZXJ2YWwsIDQpKTtcclxuICB9XHJcblxyXG4gIGdldCB2YWx1ZSgpIHtcclxuICAgIGNvbnN0IHZhbHVlID0gdGhpcy5zb3VyY2UuYnVmZmVyLmdldFVpbnQzMigwLCB0cnVlKTtcclxuICAgIHJldHVybiBhcHAuR2xvd0RhdGEuZnJvbVVJbnQzMih2YWx1ZSk7XHJcbiAgfVxyXG5cclxuICBzZXQgdmFsdWUodmFsdWU6IGFwcC5HbG93RGF0YSkge1xyXG4gICAgaWYgKHRoaXMudmFsdWUuaXNTYW1lKHZhbHVlKSkgcmV0dXJuO1xyXG4gICAgdGhpcy5zb3VyY2UuYnVmZmVyLnNldFVpbnQzMigwLCB2YWx1ZS50b1VJbnQzMigpLCB0cnVlKTtcclxuICAgIHRoaXMuc291cmNlLnNlbmQgPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgdG9TdHJpbmcoKSB7XHJcbiAgICByZXR1cm4gYXBwLnNlcmlhbGl6ZSh0aGlzLnZhbHVlKTtcclxuICB9XHJcbn1cclxuIl19