"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Sense = void 0;
class Sense {
    constructor(maximumDistance = 200) {
        this.maximumDistance = maximumDistance;
    }
    updateStates(localPlayer, players) {
        for (const x of players) {
            if (x.isSameTeam(localPlayer) || [0, 255].includes(x.glowEnable.value))
                continue;
            const dx = (localPlayer.localOrigin.value.x - x.localOrigin.value.x) * 0.0254;
            const dy = (localPlayer.localOrigin.value.y - x.localOrigin.value.y) * 0.0254;
            const r = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));
            if (r < this.maximumDistance) {
                x.glowEnable.value = 7;
                x.glowThroughWalls.value = 2;
            }
        }
    }
}
exports.Sense = Sense;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2Vuc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL2ZlYXR1cmVzL1NlbnNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLE1BQWEsS0FBSztJQUNoQixZQUNtQixrQkFBa0IsR0FBRztRQUFyQixvQkFBZSxHQUFmLGVBQWUsQ0FBTTtJQUFHLENBQUM7SUFFNUMsWUFBWSxDQUFDLFdBQTRCLEVBQUUsT0FBK0I7UUFDeEUsS0FBSyxNQUFNLENBQUMsSUFBSSxPQUFPLEVBQUU7WUFDdkIsSUFBSSxDQUFDLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQztnQkFBRSxTQUFTO1lBQ2pGLE1BQU0sRUFBRSxHQUFHLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQztZQUM5RSxNQUFNLEVBQUUsR0FBRyxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUM7WUFDOUUsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3ZELElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxlQUFlLEVBQUU7Z0JBQzVCLENBQUMsQ0FBQyxVQUFVLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztnQkFDdkIsQ0FBQyxDQUFDLGdCQUFnQixDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7YUFDOUI7U0FDRjtJQUNILENBQUM7Q0FDRjtBQWhCRCxzQkFnQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBhcHAgZnJvbSAnLi4nO1xyXG5cclxuZXhwb3J0IGNsYXNzIFNlbnNlIHtcclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHByaXZhdGUgcmVhZG9ubHkgbWF4aW11bURpc3RhbmNlID0gMjAwKSB7fVxyXG5cclxuICB1cGRhdGVTdGF0ZXMobG9jYWxQbGF5ZXI6IGFwcC5jb3JlLlBsYXllciwgcGxheWVyczogQXJyYXk8YXBwLmNvcmUuUGxheWVyPikge1xyXG4gICAgZm9yIChjb25zdCB4IG9mIHBsYXllcnMpIHtcclxuICAgICAgaWYgKHguaXNTYW1lVGVhbShsb2NhbFBsYXllcikgfHwgWzAsIDI1NV0uaW5jbHVkZXMoeC5nbG93RW5hYmxlLnZhbHVlKSkgY29udGludWU7XHJcbiAgICAgIGNvbnN0IGR4ID0gKGxvY2FsUGxheWVyLmxvY2FsT3JpZ2luLnZhbHVlLnggLSB4LmxvY2FsT3JpZ2luLnZhbHVlLngpICogMC4wMjU0O1xyXG4gICAgICBjb25zdCBkeSA9IChsb2NhbFBsYXllci5sb2NhbE9yaWdpbi52YWx1ZS55IC0geC5sb2NhbE9yaWdpbi52YWx1ZS55KSAqIDAuMDI1NDtcclxuICAgICAgY29uc3QgciA9IE1hdGguc3FydChNYXRoLnBvdyhkeCwgMikgKyBNYXRoLnBvdyhkeSwgMikpO1xyXG4gICAgICBpZiAociA8IHRoaXMubWF4aW11bURpc3RhbmNlKSB7XHJcbiAgICAgICAgeC5nbG93RW5hYmxlLnZhbHVlID0gNztcclxuICAgICAgICB4Lmdsb3dUaHJvdWdoV2FsbHMudmFsdWUgPSAyO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==